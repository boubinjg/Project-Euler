#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <math.h>
#include "bigInt.h"
#include "soe.h"
#include "Euler.h"
std::vector<bool> sieve = soe::boolseive(1000000);
std::vector<int> primes = soe::seive(1000000);
void print(std::vector<int> v)
{
	for(int i = 0; i<v.size(); i++)
		std::cout<<v[i]<<" ";
	std::cout<<std::endl;
}
std::vector<int> facts(int n, int pn, std::string parentFactors)
{
	int newVal = pn;
	for(int i = n/2; i>= 2; i--)
	{
		if(n% i == 0)
			if(newVal > i)
				newVal = i;
		if(n/i <= pn && i<=pn && n/i <= i)
		{
			std::cout<<parentFactors<<" "<<i<<" "<<n/i<<std::endl;
			newVal = number/i;
		}	
		if(i<=parentVal)
		{
			printFactor(number/i, strcat(parentFactors,strcat(i,"*")),newVal);
		}
	}
	return v;
}
int main()
{
}

